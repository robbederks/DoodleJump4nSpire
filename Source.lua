frame = 0
playerPosition = 0
playerPositionY = 170
menu = true
falling = false
blockX = {}
blockY = {}
blockY[0] = 0
height = 0
i = 1
jumped = true
moveI = 0
pause = false
minToCheck = 1
level = 1
movingLeft = false
typing = false
nameEntered = ""

local function fillRoundRect(x,y,wd,ht,radius)  -- wd = width and ht = height -- renders badly when transparency (alpha) is not at maximum >< will re-code later
	if radius > ht/2 then radius = ht/2 end -- avoid drawing cool but unexpected shapes. This will draw a circle (max radius)
    myGC:fillPolygon({(x-wd/2),(y-ht/2+radius), (x+wd/2),(y-ht/2+radius), (x+wd/2),(y+ht/2-radius), (x-wd/2),(y+ht/2-radius), (x-wd/2),(y-ht/2+radius)})
    myGC:fillPolygon({(x-wd/2-radius+1),(y-ht/2), (x+wd/2-radius+1),(y-ht/2), (x+wd/2-radius+1),(y+ht/2), (x-wd/2+radius),(y+ht/2), (x-wd/2+radius),(y-ht/2)})
    x = x-wd/2  -- let the center of the square be the origin (x coord)
	y = y-ht/2 -- same
	myGC:fillArc(x + wd - (radius*2), y + ht - (radius*2), radius*2, radius*2, 1, -91);
    myGC:fillArc(x + wd - (radius*2), y, radius*2, radius*2,-2,91);
    myGC:fillArc(x, y, radius*2, radius*2, 85, 95);
    myGC:fillArc(x, y + ht - (radius*2), radius*2, radius*2, 180, 95);
end

function drawPlayer (gc)
	if not menu and not pause then
		playerPositionX = 150 + playerPosition * 20
		gc:setColorRGB(0,0,0)
		if movingLeft then
			gc:drawImage(doodleL, playerPositionX, playerPositionY)
		else
			gc:drawImage(doodleR, playerPositionX, playerPositionY)
		end
	end
end

function generateBlock()
	blockX[i] = math.random(20,280)
	blockY[i] = (blockY[i-1] - math.random((13+2*level),(35+5*level)))
	i = i+1
end


function drawJumpBlocks(gc)
	e = minToCheck - 15
	if e < 1 then
		e = 1
	end
	bY = 0
	while e < i and bY < (height + 170) do
		bX = blockX[e]
		bY = blockY[e]
		if level%3 == 0 then
			gc:setColorRGB(255,0,0)
		elseif level%3 == 1 then
			gc:setColorRGB(0,255,0)
		else
			gc:setColorRGB(0,0,255)
		end
		fillRoundRect(bX, (bY+height+170), 40, 10, 5)
		e = e+1
	end	
end

function checkForCollision()
	j = minToCheck
	if j == nil then
		j = 1
	end
	while (not menu) and j<i and blockY[j] < (height + 240)do
		if ((playerPositionY - (blockY[j] + height + 160)) < 20) and ((playerPositionY - (blockY[j] + height + 160)) > -10) and ((playerPositionX - blockX[j]) < 40) and ((playerPositionX - blockX[j]) > -40) then
			jumped = true
			moveI = 0
			falling = false
			minToCheck = j
		end
		j = j+1
	end
end	

function jumpPlayer()
	if (playerPositionY > 50) and falling and (playerPositionY < 170) then	
		playerPositionY = playerPositionY + 5
		checkForCollision()
	elseif (playerPositionY > 50) and falling and (playerPositionY > 240) then	
		playerPositionY = playerPositionY + 5
		falling = false
		menu = true
		if var.recall("topscore") == nil then
			var.store("topscore", height)
			typing = true
		else
			if height > var.recall("topscore") and lost then
				typing = true
			end
		end
	else
		playerPositionY = playerPositionY + 5
		lost = true
		falling = true
	end
end

function on.arrowRight()
	if not menu then
		if playerPosition < 7 then
			playerPosition = playerPosition + 1
		end
		movingLeft = false
	end
end

function on.arrowLeft()
	if not menu then
		if playerPosition > -7 then 
			playerPosition = playerPosition - 1
		end
		movingLeft = true
	end
end

function on.charIn(ch)
	if ch=="6" or ch=="9" or ch=="3" then
		on.arrowRight()
	elseif ch=="4" or ch=="7" or ch=="1" then
		on.arrowLeft()
	elseif ch=="p" and not typing then
		if pause then
			pause = false
		else
			pause = true
		end
	elseif typing then
		nameEntered = nameEntered .. ch
	end
end 

function justStarted()
	k = 0
	doodleL = image.new("\025\000\000\000\025\000\000\000\000\000\000\0002\000\000\000\016\000\001\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\189\247R\202\198\152\198\152\166\148)\165\024\227\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\215\218c\140\225\160\004\198\169\214\173\218-\198\164\148\016\194\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255R\202a\140\133\210g\239g\239G\239g\239i\243J\239\233\189\140\177\223\251\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\214\218b\140\199\222g\243'\235'\235'\235H\235I\235H\239\137\243\229\193J\169\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\157\243C\140\236\222g\239'\235G\235'\235'\235G\235'\235H\235H\235g\243\130\177R\202\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\010\161\231\189\136\243'\235'\235'\235'\235'\235'\235'\235'\235'\235G\235G\235\161\144|\239\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\2559\235`\140G\235F\235G\235G\235'\235'\235'\235G\235'\235'\235G\235'\231g\243\130\177R\202{\239\198\152s\206\156\243\222\251\255\255\255\255\024\227d\140$\198E\206\132\177\230\222\002\161'\231G\235'\235'\235'\235'\235'\235G\235G\239\133\214\231\160\206\185\005\165\128\140!\128\165\148\008\161\164\148\162\148\004\194h\243\166\214E\206\006\231E\202'\235'\235'\235'\235'\235'\235'\235'\235G\235\231\226\198\152\197\152L\239\002\161I\206'\231\197\218\230\226h\239g\243'\235G\235H\239G\235g\239G\235'\235'\235'\235'\235(\235'\235H\235J\239\231\226\007\161\228\160\006\227a\140d\206\133\210E\206D\202\133\210'\235G\239&\235'\235'\235'\235&\235'\235'\235'\235'\235o\243l\239&\235H\239\230\222\007\161\130\144\034\165\000\128\230\152l\1732\198R\202\008\161\193\152\008\231j\239G\235'\235&\235'\235'\235G\235'\235'\235G\235G\235'\235G\239\133\210\173\181\148\210\008\161\024\227\255\255\255\255\255\255\255\255\255\255\009\161C\169\137\247G\239G\239G\235H\239G\235G\235G\235G\235G\239H\239G\235h\243D\202\180\214\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\2559\231C\136(\202es\206\000\128\131\144\163\144\226\148\227\148\004\153\004\153$\153#\153e\161\166\169\167\169\232\177\008\182\164\148\254\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\173\181\132\177K\239\009\231\199\222\198\218\232\222\199\222\167\218e\210%\202$\198\196\189\164\181\227\156C\136\222\251\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\206\185\194\152\196\185\195\185\228\189F\202f\206\134\214\166\218\008\231(\235(\235I\239G\239e\206\016\194\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\016\194\000\128\000\128\129\136\002\149\161\140\003\153\194\144\195\148\005\157$\157E\161E\161\227\152 \132r\206\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\222\251\147\206!\132\008\161\173\181\131\144\129\140\005\157\168\173\135\169D\161C\157d\161c\161@\132\206\185\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255J\169\222\251\255\2559\231\231\156\222\251\222\251j\173\140\177\181\214*\169C\136\239\189\189\247\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255Z\235\148\210\132\144\255\255\255\255{\239\238\189\255\255\255\255\147\2109\235\255\255\156\243\205\185\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\181\214\205\185\214\218\255\255\156\243\008\161\147\210\255\255\189\247\206\189\182\214\255\2558\231j\173\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\189\2479\231\255\255\255\255\239\189J\169\222\251\024\227\230\156\024\227\255\255\255\255\255\255")
	doodleR = image.new("\025\000\000\000\025\000\000\000\000\000\000\0002\000\000\000\016\000\001\000\255\255\255\255\255\255\255\255\255\255\024\227)\161\166\148\199\152\198\152R\202\189\247\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\240\193\165\148,\198\173\218\168\214\004\198\225\156c\140\214\218\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\254\255\141\177\233\189J\235h\243G\239G\239h\239G\239\133\210a\140R\202\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255J\169\004\194\137\243H\235H\235H\235'\235'\235'\235g\239\231\222b\140\214\218\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\2551\202\130\177g\243H\235H\235G\235'\235'\235'\235'\235'\235g\239\236\222d\140\156\247\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\155\239\129\144G\235(\235'\235'\235'\235'\235'\235G\235'\235G\235'\235\137\243\230\189\009\165\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\2552\202\130\177g\239'\235'\235G\235'\235'\235'\235'\235G\235G\235G\235G\235'\235`\136:\231\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\231\160\133\214G\235'\235'\235'\235'\235'\235'\235G\235'\231\002\161\230\222\131\177E\206$\198c\140\024\227\222\251\255\255\222\251\156\243s\206\199\152{\239\197\156\231\226G\235'\235'\235'\235'\235'\235'\235'\235'\235E\202\006\231e\206\166\218g\243\004\194\161\148\164\148\008\161\164\148!\132\129\140%\165\206\185\231\160\007\227J\239H\235'\235(\235'\235'\235'\235G\235'\235h\239'\235G\239G\239'\235h\239h\239\230\226\198\218'\231I\202\002\161L\239\198\152(\161\230\222I\239&\235l\239o\243'\235G\235'\235G\235'\235'\235'\235'\235&\235G\239'\235\133\210D\202E\206\133\210d\206a\140\006\227\228\160\173\181\133\210G\239'\235G\235G\235'\235'\235'\235&\235G\235'\235'\235'\235j\239\008\231\193\152\008\157R\2021\198l\173\198\156\000\128\034\165\130\144\181\218D\202h\243G\235G\235G\239G\235G\235G\235G\235G\235G\235G\239H\239\169\247C\169\009\161\255\255\255\255\255\255\255\255\255\255\024\227\008\161\148\210Z\239\162\181H\239\007\231\007\227\006\227\006\231\006\227\230\226\230\226\198\222\198\222\166\218\132\210)\202C\1369\231\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\180\214\000\128\161\148\129\144\162\144\194\148\226\152\226\152\002\153\002\153\003\153\003\157\227\148\162\144\194\144 \132\024\227\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\189\247\131\140'\182F\182\135\186\135\190\135\190\167\190\167\190\168\190\167\194\167\194\167\190\135\190\135\190\194\144\149\210\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\254\255\164\148\008\182\232\177\166\169\166\169e\161#\153\004\153\004\153\003\153\227\148\227\148\163\148\131\144\000\128s\206\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\222\251B\136\227\156\164\181\196\189\004\198$\202f\210\167\218\199\222\232\222\199\218\199\222\009\231k\239d\177\173\181\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\016\194e\206H\239H\239(\235)\235\008\227\166\214\134\210f\206F\206\228\189\195\185\196\185\226\152\206\185\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255R\206 \132\227\152E\161%\161$\157$\157\227\148\194\144\003\153\162\140\002\149\129\136\000\128\000\128\016\194\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\206\189@\132d\161c\161c\161D\161\135\169\137\173\004\157\129\140\131\144\173\181\008\161B\136s\210\222\251\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\189\247\239\189C\136*\169\182\214l\177k\173\222\251\222\255\232\1569\231\255\255\222\251J\169\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\205\185\156\243\255\255:\235\147\210\255\255\255\255\238\189{\239\255\255\255\255\132\144\148\210Z\235\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255J\1738\231\255\255\214\218\206\189\189\247\255\255\148\210\008\165\156\243\255\255\214\218\206\185\181\214\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\024\227\230\156\024\227\222\251I\169\239\189\255\255\255\2559\231\189\247\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255")
	started = true
	falling = false
	while k < 10 do
		playerPositionY = playerPositionY - 10
		k = k+1
	end
	falling = true
	started = false
end

function on.timer()
	if (jumped and moveI < 10) then
		height = height + 15
		playerPositionY = playerPositionY - 10
		falling = false
		moveI = moveI + 1
	elseif jumped and not started then
		falling = true
		jumped = false
	elseif jumped then
		falling = true
		jumped = false
	end
	frame = frame + 1
	platform.window:invalidate()
end

function on.enterKey()
	if typing then
		var.store("topscore", height)
		var.store("holder", nameEntered)
		typing = false
		menu = true
		document.markChanged()
	elseif menu then
		menu = false
		i = 1
		e = 1
		height = 0
		lost = false
		jumpPlayer()
		playerPositionY = 170
		justStarted()
		playerPosition = 0
		playerPositionY = 170
		falling = false
		blockX = {}
		blockY = {}
		blockY[0] = 0
		height = 0
		jumped = true
		moveI = 0
		pause = false
		minToCheck = 1
		frame = 0
		level = 1
	end
end

function on.backspaceKey()
	if typing then
		nameEntered = string.sub(nameEntered, 0, -2)
	end
end

function on.escapeKey()
	menu=true
end
 

function on.paint(gc)
	myGC = gc
	if var.recallstr("topscore") == nil then
		var.store("topscore", 0)
		var.store("holder", "")
	end
	if not menu and not pause and not typing then
		if i - 50 < minToCheck then
			generateBlock()
		end
		drawJumpBlocks(gc)
		drawPlayer(gc)
		jumpPlayer()
		gc:setColorRGB(0,0,0)
		gc:setFont("sansserif","r",10)
		gc:drawString("Score: " .. height .. " Level: " .. level,10,5,"top")
		frame = frame + 1
		if height > (10000 * level) then
			level = level + 1
		end
	elseif typing then
		gc:setColorRGB(0,0,0)
		gc:setFont("sansserif","r",20)
		gc:drawString("DoodleJump",60,40,"top")
		gc:setFont("sansserif","r",10)
		gc:drawString("TOPSCORE! Type your name and hit ENTER.",30,90,"top")
		gc:drawString(nameEntered,80,110,"top")
	elseif menu then
		gc:setColorRGB(0,0,0)
		gc:setFont("sansserif","r",20)
		gc:drawString("DoodleJump",60,40,"top")
		gc:setFont("sansserif","r",10)
		gc:drawString("Press ENTER to start, p to pause",60,90,"top")
		if lost then
			gc:drawString("Game Over! Score: " .. height .. " Level: " .. level ,60,120,"top")
		end
		gc:setFont("sansserif","r",8)
		gc:drawString("Topscore: " .. var.recallstr("topscore") .. " By: " .. var.recallstr("holder") ,10,170,"top")
	elseif pause then
		gc:setFont("sansserif","r",20)
		gc:drawString("DoodleJump",60,40,"top")
		gc:setFont("sansserif","r",10)
		gc:drawString("Paused! Press p to resume!",70,90,"top")
	end
	gc:setColorRGB(0,0,0)
	gc:fillRect(0,190,340,30)
	gc:setColorRGB(255,255,255)
	gc:setFont("sansserif","r",15)
	gc:drawString("DoodleJump4nSpire - By Robbe Derks",10,190,"top")
	timer.start(0.05)
end